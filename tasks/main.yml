---
## tasks file for lighthouse-role
- name: Install nginx
  include_tasks: 
    file: nginx/main.yml
- name: "Notify Handlers"
  meta: flush_handlers
- name: Install lighthouse
  include_tasks: 
    file: lighthouse/main.yml
#- name: Install dependencies lighthouse
#  become: true
#  ansible.builtin.yum:
#    name: git
#    state: present
#- name: Copy from git lighthouse
#  git:
#    repo: "{{ lighthouse_vcs }}"
#    version: master
#    dest: "{{ lighthouse_location_dir }}"
#- name: Create lighthouse config
#  become: true
#  template:
#    src: "template/lighthouse.conf.j2"
#    dest: "/etc/nginx/conf.d/default.conf"
#    mode: 0644
#  notify: reload-nginx
#  tags: install lighthouse
#- name: Check Lighthouse port
#  ansible.builtin.assert:
#    that: lighthouse_port | int > 1024
#- name: Install epel-release for debian10
#  become: true
#  ansible.builtin.yum:
#    name: "epel-release"
#    state: present
#  when:
#    - ansible_facts['distribution'] == "Debian"
#    - ansible_facts['distribution_major_version'] == "10
#- name: Change repo for debian11
#  block:
#    - name: Get files of repo
#      ansible.builtin.find:
#        path: /etc/yum.repos.d
#        pattern: Debian-*
#      register: rep_res
#    - name: Comment current url
#      ansible.builtin.replace:
#        path: "{{ item }}"
#        regexp: "^mirrorlist="
#        replace: "#mirrorlist="
#      loop: "{{ rep_res.files | map(attribute='path') }}"
#    - name: Uncomment vault url
#      ansible.builtin.replace:
#        path: "{{ item }}"
#        regexp: "^#baseurl=http://mirror.debian.org"
#        replace: "baseurl=http://vault.debian.org"
#      loop: "{{ rep_res.files | map(attribute='path')}}"
#  when:
#    - ansible_facts['distribution'] == "Debian"
#    - ansible_facts['distribution_major_version'] == "11"
#- name: Update APT package manager cache
#  ansible.builtin.apt:
#    update_cache: yes
#  when: ansible_pkg_mgr == "apt"
#- name: Install NGinX repo for YUM
#  become: true
#  ansible.builtin.template:
#    src: nginx.repo
#    dest: '/etc/yum.repos.d/nginx.repo'
#  when: ansible_pkg_mgr == "yum"
#- name: Install NGinX and Git
#  become: true
#  ansible.builtin.package:
#    name: "{{ item }}"
#    state: present
#  loop:
#    - "nginx"
#    - "git"
#- name: Check lighthouse files
#  ansible.builtin.file:
#    path: "{{ lighthouse_path }}/app.js"
#    state: file
#  register: lh_exists
#  ignore_errors: true
#- name: Clone VK Lighthouse
#  become: true
#  ansible.builtin.git:
#    repo: "{{ lighthouse_repo }}"
#    dest: "{{ lighthouse_path }}"
#    version: "{{ lighthouse_branch }}"
#    force: false
#  when: lh_exists.state == "absent"
#- name: Change lighthouse default host
#  become: true
#  ansible.builtin.replace:
#    path: "{{ lighthouse_path }}/app.js"
#    regexp: '127\.0\.0\.1:8123\/''\)'
#    replace: '{{ clickhouse_host }}:{{ clickhouse_port }}/?user={{ clickhouse_user }}&password={{ clickhouse_password }}'')'
#- name: Restore lighthouse default host
#  become: true
#  ansible.builtin.replace:
#    path: "{{ lighthouse_path }}/app.js"
#    regexp: '{{ clickhouse_host }}:{{ clickhouse_port }}\/\?user={{ clickhouse_user }}&password={{ clickhouse_password }}''\)'
#    replace: '127.0.0.1:8123/'')'
#  when: lh_exists.state == "file"
#  tags:
#    - never
#- name: Configure NGinX
#  become: true
#  ansible.builtin.template:
#    src: lighthouse.conf.j2
#    dest: '/etc/nginx/conf.d/lighthouse.conf'
#  notify: Restart nginx
#- name: Enable NGinX autostart
#  become: true
#  ansible.builtin.service:
#    name: "nginx"
#    enabled: true
#    state: started
...
